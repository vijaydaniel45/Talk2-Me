
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.3.1
 * Query Engine version: 61e140623197a131c2a6189271ffee05a7aa9a59
 */
Prisma.prismaVersion = {
  client: "5.3.1",
  engine: "61e140623197a131c2a6189271ffee05a7aa9a59"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.Api_keysScalarFieldEnum = {
  id: 'id',
  secret: 'secret',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_documentsScalarFieldEnum = {
  id: 'id',
  docId: 'docId',
  filename: 'filename',
  docpath: 'docpath',
  workspaceId: 'workspaceId',
  metadata: 'metadata',
  pinned: 'pinned',
  watched: 'watched',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.InvitesScalarFieldEnum = {
  id: 'id',
  code: 'code',
  status: 'status',
  claimedBy: 'claimedBy',
  workspaceIds: 'workspaceIds',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.System_settingsScalarFieldEnum = {
  id: 'id',
  label: 'label',
  value: 'value',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  pfpFilename: 'pfpFilename',
  role: 'role',
  suspended: 'suspended',
  seen_recovery_codes: 'seen_recovery_codes',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt',
  dailyMessageLimit: 'dailyMessageLimit',
  bio: 'bio'
};

exports.Prisma.Recovery_codesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code_hash: 'code_hash',
  createdAt: 'createdAt'
};

exports.Prisma.Password_reset_tokensScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.Document_vectorsScalarFieldEnum = {
  id: 'id',
  docId: 'docId',
  vectorId: 'vectorId',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Welcome_messagesScalarFieldEnum = {
  id: 'id',
  user: 'user',
  response: 'response',
  orderIndex: 'orderIndex',
  createdAt: 'createdAt'
};

exports.Prisma.WorkspacesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  vectorTag: 'vectorTag',
  createdAt: 'createdAt',
  openAiTemp: 'openAiTemp',
  openAiHistory: 'openAiHistory',
  lastUpdatedAt: 'lastUpdatedAt',
  openAiPrompt: 'openAiPrompt',
  similarityThreshold: 'similarityThreshold',
  chatProvider: 'chatProvider',
  chatModel: 'chatModel',
  topN: 'topN',
  chatMode: 'chatMode',
  pfpFilename: 'pfpFilename',
  agentProvider: 'agentProvider',
  agentModel: 'agentModel',
  queryRefusalResponse: 'queryRefusalResponse',
  vectorSearchMode: 'vectorSearchMode'
};

exports.Prisma.Workspace_threadsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  workspace_id: 'workspace_id',
  user_id: 'user_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_suggested_messagesScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  heading: 'heading',
  message: 'message',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_chatsScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  prompt: 'prompt',
  response: 'response',
  include: 'include',
  user_id: 'user_id',
  thread_id: 'thread_id',
  api_session_id: 'api_session_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt',
  feedbackScore: 'feedbackScore'
};

exports.Prisma.Workspace_agent_invocationsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  prompt: 'prompt',
  closed: 'closed',
  user_id: 'user_id',
  thread_id: 'thread_id',
  workspace_id: 'workspace_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Workspace_usersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  workspace_id: 'workspace_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Cache_dataScalarFieldEnum = {
  id: 'id',
  name: 'name',
  data: 'data',
  belongsTo: 'belongsTo',
  byId: 'byId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Embed_configsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  enabled: 'enabled',
  chat_mode: 'chat_mode',
  allowlist_domains: 'allowlist_domains',
  allow_model_override: 'allow_model_override',
  allow_temperature_override: 'allow_temperature_override',
  allow_prompt_override: 'allow_prompt_override',
  max_chats_per_day: 'max_chats_per_day',
  max_chats_per_session: 'max_chats_per_session',
  message_limit: 'message_limit',
  workspace_id: 'workspace_id',
  createdBy: 'createdBy',
  usersId: 'usersId',
  createdAt: 'createdAt'
};

exports.Prisma.Embed_chatsScalarFieldEnum = {
  id: 'id',
  prompt: 'prompt',
  response: 'response',
  session_id: 'session_id',
  include: 'include',
  connection_information: 'connection_information',
  embed_id: 'embed_id',
  usersId: 'usersId',
  createdAt: 'createdAt'
};

exports.Prisma.Event_logsScalarFieldEnum = {
  id: 'id',
  event: 'event',
  metadata: 'metadata',
  userId: 'userId',
  occurredAt: 'occurredAt'
};

exports.Prisma.Slash_command_presetsScalarFieldEnum = {
  id: 'id',
  command: 'command',
  prompt: 'prompt',
  description: 'description',
  uid: 'uid',
  userId: 'userId',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Document_sync_queuesScalarFieldEnum = {
  id: 'id',
  staleAfterMs: 'staleAfterMs',
  nextSyncAt: 'nextSyncAt',
  createdAt: 'createdAt',
  lastSyncedAt: 'lastSyncedAt',
  workspaceDocId: 'workspaceDocId'
};

exports.Prisma.Document_sync_executionsScalarFieldEnum = {
  id: 'id',
  queueId: 'queueId',
  status: 'status',
  result: 'result',
  createdAt: 'createdAt'
};

exports.Prisma.Browser_extension_api_keysScalarFieldEnum = {
  id: 'id',
  key: 'key',
  user_id: 'user_id',
  createdAt: 'createdAt',
  lastUpdatedAt: 'lastUpdatedAt'
};

exports.Prisma.Temporary_auth_tokensScalarFieldEnum = {
  id: 'id',
  token: 'token',
  userId: 'userId',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.System_prompt_variablesScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  type: 'type',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Prompt_historyScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  prompt: 'prompt',
  modifiedBy: 'modifiedBy',
  modifiedAt: 'modifiedAt'
};

exports.Prisma.Desktop_mobile_devicesScalarFieldEnum = {
  id: 'id',
  deviceOs: 'deviceOs',
  deviceName: 'deviceName',
  token: 'token',
  approved: 'approved',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.Workspace_parsed_filesScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  workspaceId: 'workspaceId',
  userId: 'userId',
  threadId: 'threadId',
  metadata: 'metadata',
  tokenCountEstimate: 'tokenCountEstimate',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  api_keys: 'api_keys',
  workspace_documents: 'workspace_documents',
  invites: 'invites',
  system_settings: 'system_settings',
  users: 'users',
  recovery_codes: 'recovery_codes',
  password_reset_tokens: 'password_reset_tokens',
  document_vectors: 'document_vectors',
  welcome_messages: 'welcome_messages',
  workspaces: 'workspaces',
  workspace_threads: 'workspace_threads',
  workspace_suggested_messages: 'workspace_suggested_messages',
  workspace_chats: 'workspace_chats',
  workspace_agent_invocations: 'workspace_agent_invocations',
  workspace_users: 'workspace_users',
  cache_data: 'cache_data',
  embed_configs: 'embed_configs',
  embed_chats: 'embed_chats',
  event_logs: 'event_logs',
  slash_command_presets: 'slash_command_presets',
  document_sync_queues: 'document_sync_queues',
  document_sync_executions: 'document_sync_executions',
  browser_extension_api_keys: 'browser_extension_api_keys',
  temporary_auth_tokens: 'temporary_auth_tokens',
  system_prompt_variables: 'system_prompt_variables',
  prompt_history: 'prompt_history',
  desktop_mobile_devices: 'desktop_mobile_devices',
  workspace_parsed_files: 'workspace_parsed_files'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
