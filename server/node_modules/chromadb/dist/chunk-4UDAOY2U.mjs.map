{"version":3,"sources":["../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigData.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getSsoSessionData.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSsoSessionData.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/mergeConfigFiles.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/parseKnownFiles.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/types.js","../../../node_modules/.pnpm/@smithy+shared-ini-file-loader@3.1.1/node_modules/@smithy/shared-ini-file-loader/dist-es/index.js"],"sourcesContent":["export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = homedir();\n    return homeDirCache[homeDirCacheKey];\n};\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { getConfigData } from \"./getConfigData\";\nimport { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const CONFIG_PREFIX_SEPARATOR = \".\";\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const parsedFiles = await Promise.all([\n        slurpFile(configFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError),\n        slurpFile(filepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => key.startsWith(IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR))\n    .reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","export const mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n","import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nimport { mergeConfigFiles } from \"./mergeConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","export {};\n","export * from \"./getHomeDir\";\nexport * from \"./getProfileName\";\nexport * from \"./getSSOTokenFilepath\";\nexport * from \"./getSSOTokenFromFile\";\nexport * from \"./loadSharedConfigFiles\";\nexport * from \"./loadSsoSessionData\";\nexport * from \"./parseKnownFiles\";\nexport * from \"./types\";\n"],"mappings":";;;;;;;;;AAAA,IAAa,aACA,iBACA;AAFb;AAAA;AAAA;AAAO,IAAM,cAAc;AACpB,IAAM,kBAAkB;AACxB,IAAM,iBAAiB,CAAC,SAAS,KAAK,WAAW,QAAQ,IAAI,WAAW,KAAK;AAAA;AAAA;;;ACFpF,SAAS,eAAe;AACxB,SAAS,WAAW;AADpB,IAEM,cACA,oBAMO;AATb;AAAA;AAAA;AAEA,IAAM,eAAe,CAAC;AACtB,IAAM,qBAAqB,MAAM;AAC7B,UAAI,WAAW,QAAQ,SAAS;AAC5B,eAAO,GAAG,QAAQ,QAAQ,CAAC;AAAA,MAC/B;AACA,aAAO;AAAA,IACX;AACO,IAAM,aAAa,MAAM;AAC5B,YAAM,EAAE,MAAM,aAAa,UAAU,YAAY,KAAK,GAAG,GAAG,IAAI,QAAQ;AACxE,UAAI;AACA,eAAO;AACX,UAAI;AACA,eAAO;AACX,UAAI;AACA,eAAO,GAAG,SAAS,GAAG,QAAQ;AAClC,YAAM,kBAAkB,mBAAmB;AAC3C,UAAI,CAAC,aAAa,eAAe;AAC7B,qBAAa,eAAe,IAAI,QAAQ;AAC5C,aAAO,aAAa,eAAe;AAAA,IACvC;AAAA;AAAA;;;ACrBA,SAAS,YAAY;AAArB,IAEa,iBACA;AAHb;AAAA;AAAA;AACA;AACO,IAAM,kBAAkB;AACxB,IAAM,oBAAoB,MAAM,QAAQ,IAAI,eAAe,KAAK,KAAK,WAAW,GAAG,QAAQ,QAAQ;AAAA;AAAA;;;ACH1G,IAEa;AAFb;AAAA;AAAA;AAAA;AACA;AACO,IAAM,gBAAgB,CAAC,SAAS,OAAO,QAAQ,IAAI,EACrD,OAAO,CAAC,CAAC,GAAG,MAAM;AACnB,YAAM,mBAAmB,IAAI,QAAQ,uBAAuB;AAC5D,UAAI,qBAAqB,IAAI;AACzB,eAAO;AAAA,MACX;AACA,aAAO,OAAO,OAAO,cAAc,EAAE,SAAS,IAAI,UAAU,GAAG,gBAAgB,CAAC;AAAA,IACpF,CAAC,EACI,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;AAC/B,YAAM,mBAAmB,IAAI,QAAQ,uBAAuB;AAC5D,YAAM,aAAa,IAAI,UAAU,GAAG,gBAAgB,MAAM,eAAe,UAAU,IAAI,UAAU,mBAAmB,CAAC,IAAI;AACzH,UAAI,UAAU,IAAI;AAClB,aAAO;AAAA,IACX,GAAG;AAAA,MACC,GAAI,KAAK,WAAW,EAAE,SAAS,KAAK,QAAQ;AAAA,IAChD,CAAC;AAAA;AAAA;;;ACjBD,SAAS,QAAAA,aAAY;AAArB,IAEa,sBACA;AAHb;AAAA;AAAA;AACA;AACO,IAAM,uBAAuB;AAC7B,IAAM,yBAAyB,MAAM,QAAQ,IAAI,oBAAoB,KAAKA,MAAK,WAAW,GAAG,QAAQ,aAAa;AAAA;AAAA;;;ACHzH,IAEM,gBACA,sBACO;AAJb;AAAA;AAAA;AAAA;AACA;AACA,IAAM,iBAAiB;AACvB,IAAM,uBAAuB,CAAC,aAAa,mBAAmB;AACvD,IAAM,WAAW,CAAC,YAAY;AACjC,YAAM,MAAM,CAAC;AACb,UAAI;AACJ,UAAI;AACJ,iBAAW,WAAW,QAAQ,MAAM,OAAO,GAAG;AAC1C,cAAM,cAAc,QAAQ,MAAM,YAAY,EAAE,CAAC,EAAE,KAAK;AACxD,cAAM,YAAY,YAAY,CAAC,MAAM,OAAO,YAAY,YAAY,SAAS,CAAC,MAAM;AACpF,YAAI,WAAW;AACX,2BAAiB;AACjB,8BAAoB;AACpB,gBAAM,cAAc,YAAY,UAAU,GAAG,YAAY,SAAS,CAAC;AACnE,gBAAM,UAAU,eAAe,KAAK,WAAW;AAC/C,cAAI,SAAS;AACT,kBAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,IAAI;AAC3B,gBAAI,OAAO,OAAO,cAAc,EAAE,SAAS,MAAM,GAAG;AAChD,+BAAiB,CAAC,QAAQ,IAAI,EAAE,KAAK,uBAAuB;AAAA,YAChE;AAAA,UACJ,OACK;AACD,6BAAiB;AAAA,UACrB;AACA,cAAI,qBAAqB,SAAS,WAAW,GAAG;AAC5C,kBAAM,IAAI,MAAM,+BAA+B,WAAW,GAAG;AAAA,UACjE;AAAA,QACJ,WACS,gBAAgB;AACrB,gBAAM,oBAAoB,YAAY,QAAQ,GAAG;AACjD,cAAI,CAAC,CAAC,GAAG,EAAE,EAAE,SAAS,iBAAiB,GAAG;AACtC,kBAAM,CAAC,MAAM,KAAK,IAAI;AAAA,cAClB,YAAY,UAAU,GAAG,iBAAiB,EAAE,KAAK;AAAA,cACjD,YAAY,UAAU,oBAAoB,CAAC,EAAE,KAAK;AAAA,YACtD;AACA,gBAAI,UAAU,IAAI;AACd,kCAAoB;AAAA,YACxB,OACK;AACD,kBAAI,qBAAqB,QAAQ,UAAU,MAAM,SAAS;AACtD,oCAAoB;AAAA,cACxB;AACA,kBAAI,cAAc,IAAI,IAAI,cAAc,KAAK,CAAC;AAC9C,oBAAM,MAAM,oBAAoB,CAAC,mBAAmB,IAAI,EAAE,KAAK,uBAAuB,IAAI;AAC1F,kBAAI,cAAc,EAAE,GAAG,IAAI;AAAA,YAC/B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACnDA,SAAS,YAAY,kBAAkB;AAAvC,IACQ,UACF,kBACO;AAHb;AAAA;AAAA;AACA,KAAM,EAAE,aAAa;AACrB,IAAM,mBAAmB,CAAC;AACnB,IAAM,YAAY,CAAC,MAAM,YAAY;AACxC,UAAI,CAAC,iBAAiB,IAAI,KAAK,SAAS,aAAa;AACjD,yBAAiB,IAAI,IAAI,SAAS,MAAM,MAAM;AAAA,MAClD;AACA,aAAO,iBAAiB,IAAI;AAAA,IAChC;AAAA;AAAA;;;ACRA,IAKM,cACO,yBACA;AAPb;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,IAAM,eAAe,OAAO,CAAC;AACtB,IAAM,0BAA0B;AAChC,IAAM,wBAAwB,OAAO,OAAO,CAAC,MAAM;AACtD,YAAM,EAAE,WAAW,uBAAuB,GAAG,iBAAiB,kBAAkB,EAAE,IAAI;AACtF,YAAM,cAAc,MAAM,QAAQ,IAAI;AAAA,QAClC,UAAU,gBAAgB;AAAA,UACtB,aAAa,KAAK;AAAA,QACtB,CAAC,EACI,KAAK,QAAQ,EACb,KAAK,aAAa,EAClB,MAAM,YAAY;AAAA,QACvB,UAAU,UAAU;AAAA,UAChB,aAAa,KAAK;AAAA,QACtB,CAAC,EACI,KAAK,QAAQ,EACb,MAAM,YAAY;AAAA,MAC3B,CAAC;AACD,aAAO;AAAA,QACH,YAAY,YAAY,CAAC;AAAA,QACzB,iBAAiB,YAAY,CAAC;AAAA,MAClC;AAAA,IACJ;AAAA;AAAA;;;AC1BA,IAEa;AAFb;AAAA;AAAA;AAAA;AACA;AACO,IAAM,oBAAoB,CAAC,SAAS,OAAO,QAAQ,IAAI,EACzD,OAAO,CAAC,CAAC,GAAG,MAAM,IAAI,WAAW,eAAe,cAAc,uBAAuB,CAAC,EACtF,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,UAAU,IAAI,QAAQ,uBAAuB,IAAI,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC;AAAA;AAAA;;;ACJrH,IAIMC,eACO;AALb;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,IAAMA,gBAAe,OAAO,CAAC;AACtB,IAAM,qBAAqB,OAAO,OAAO,CAAC,MAAM,UAAU,KAAK,kBAAkB,kBAAkB,CAAC,EACtG,KAAK,QAAQ,EACb,KAAK,iBAAiB,EACtB,MAAMA,aAAY;AAAA;AAAA;;;ACRvB,IAAa;AAAb;AAAA;AAAA;AAAO,IAAM,mBAAmB,IAAI,UAAU;AAC1C,YAAM,SAAS,CAAC;AAChB,iBAAW,QAAQ,OAAO;AACtB,mBAAW,CAAC,KAAK,MAAM,KAAK,OAAO,QAAQ,IAAI,GAAG;AAC9C,cAAI,OAAO,GAAG,MAAM,QAAW;AAC3B,mBAAO,OAAO,OAAO,GAAG,GAAG,MAAM;AAAA,UACrC,OACK;AACD,mBAAO,GAAG,IAAI;AAAA,UAClB;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACbA,IAEa;AAFb;AAAA;AAAA;AAAA;AACA;AACO,IAAM,kBAAkB,OAAO,SAAS;AAC3C,YAAM,cAAc,MAAM,sBAAsB,IAAI;AACpD,aAAO,iBAAiB,YAAY,YAAY,YAAY,eAAe;AAAA,IAC/E;AAAA;AAAA;;;ACLA,SAAS,kBAAkB;AAC3B,SAAS,QAAAC,aAAY;AADrB,IAGa;AAHb;AAAA;AAAA;AAEA;AACO,IAAM,sBAAsB,CAAC,OAAO;AACvC,YAAM,SAAS,WAAW,MAAM;AAChC,YAAM,YAAY,OAAO,OAAO,EAAE,EAAE,OAAO,KAAK;AAChD,aAAOA,MAAK,WAAW,GAAG,QAAQ,OAAO,SAAS,GAAG,SAAS,OAAO;AAAA,IACzE;AAAA;AAAA;;;ACPA,SAAS,YAAYC,mBAAkB;AAAvC,IAEQC,WACK;AAHb;AAAA;AAAA;AACA;AACA,KAAM,EAAE,UAAAA,cAAaD;AACd,IAAM,sBAAsB,OAAO,OAAO;AAC7C,YAAM,mBAAmB,oBAAoB,EAAE;AAC/C,YAAM,eAAe,MAAMC,UAAS,kBAAkB,MAAM;AAC5D,aAAO,KAAK,MAAM,YAAY;AAAA,IAClC;AAAA;AAAA;;;ACPA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAC,gBAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;","names":["join","swallowError","join","fsPromises","readFile","init_dist_es"]}